from collections import deque

n,m=map(int,input().split())
data=[]
for i in range(n):
  
  data.append(list(map(int,input())))

dx=[-1,1,0,0]
dy=[0,0,-1,1]
def bfs(x,y):
  
  qu=deque()
  qu.append((x,y))
  
  while qu:
  
    x,y=qu.popleft()
    for i in range(4):
      nx= x+dx[i]
      ny= y+dy[i]
      if nx<0 or nx>n-1 or ny<0 or ny>m-1:
        continue
      
      if data[nx][ny]==0:
        continue

      if data[nx][ny]==1 :  
        data[nx][ny]=data[x][y]+1
        qu.append((nx,ny))
  return data[n-1][m-1]


print(bfs(0,0))
###########내풀이######################
from collections import deque

n,m=map(int,input().split())
data=[]
for i in range(n):
  
  data.append(list(map(int,input())))

a=2

def bfs(x,y):
  global a
  qu=deque()
  qu.append((x,y))
  
  while qu:
    global a
    x,y=qu.popleft()
    
    if x<0 or x>n-1 or y<0 or y>m-1:
      continue
      
     
    if data[x][y]!=0 :  
      #data[x][y]=a
      if 0<=x+1<=n-1 and 0<=y<=m-1:
        if data[x+1][y]==1:
          qu.append((x+1,y))
          data[x+1][y]=data[x][y]+1
        
      if 0<=x<=n-1 and 0<=y+1<=m-1:
        if data[x][y+1]==1:
          qu.append((x,y+1))
          data[x][y+1]=data[x][y]+1
       
      if 0<=x-1<=n-1 and 0<=y<=m-1:
        if data[x-1][y]==1:
          qu.append((x-1,y))
          data[x-1][y]=data[x][y]+1
       
      if 0<=x<=n-1 and 0<=y-1<=m-1:
        if data[x][y-1]==1:
          qu.append((x,y-1))
          data[x][y-1]=data[x][y]+1
      #a+=1
    #print(a)
    print(qu)
    
    
bfs(0,0)
for i in range(n):
  for j in range(m):
    print(data[i][j],end=' ')
  print()

print(data[n-1][m-1])
